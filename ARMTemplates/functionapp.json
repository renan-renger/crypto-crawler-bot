{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "appName": {
        "type": "string",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "appInsightsName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "The name of the ApplicationInsight bound to function app that you wish to create."
        }
      },
      "serviceBusConnectionSecret": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Azure ServiceBus used to connect all the services together."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "runtime": {
        "type": "string",
        "defaultValue": "dotnet",
        "allowedValues": ["node", "dotnet", "java"],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "TenantId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Tenant ID used for Managed Identity Authorization/Authentication"
        }
      },
      "UserAssignedClientId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Client ID used for Managed Identity Authorization/Authentication"
        }
      },
      "ServiceBusNamespace": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description" : "Namespace used by the Service Bus"
        }
      },
      "ServiceBusConnectionString": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description" : "ServiceBus connection string, to be used instead of TenantId and UserAssignedClientId. If set to anything other than empty, will ignore both parameters and connect via ConnString."
        }
      },
      "MercadoBitcoinApiUser": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description" : "API Key for Mercado Bitcoin, a Brazilian exchange for crypto assets - Refer to: https://api.mercadobitcoin.net/api/v4/docs"
        }
      },
      "MercadoBitcoinApiPassword": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description" : "API Password for Mercado Bitcoin, a Brazilian exchange for crypto assets - Refer to: https://api.mercadobitcoin.net/api/v4/docs"
        }
      }
    },
    "variables": {
      "functionAppName": "[parameters('appName')]",
      "hostingPlanName": "[parameters('appName')]",
      "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
      "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
      "functionWorkerRuntime": "[parameters('runtime')]",
      "appInsightsName": "[if(equals(parameters('appInsightsName'),''), parameters('appName'), parameters('appInsightsName'))]",
      "TenantId": "[parameters('TenantId')]",
      "UserAssignedClientId": "[parameters('UserAssignedClientId')]",
      "ServiceBusNamespace": "[parameters('ServiceBusNamespace')]",
      "ServiceBusConnectionString": "[parameters('ServiceBusConnectionString')]",
      "MercadoBitcoinApiUser": "[parameters('MercadoBitcoinApiUser')]",
      "MercadoBitcoinApiPassword": "[parameters('MercadoBitcoinApiPassword')]"
    },
    "resources": [
      {
        "apiVersion": "2014-04-01",
        "name": "[variables('appInsightsName')]",
        "type": "Microsoft.Insights/components",
        "location": "eastus",
        "properties": {
          "applicationId": "[variables('appInsightsName')]"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2016-12-01",
        "location": "[parameters('location')]",
        "kind": "Storage",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2015-04-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[parameters('location')]",
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "computeMode": "Dynamic",
          "sku": "Dynamic"
        }
      },
      {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "functionapp",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "identity": { 
          "type": "SystemAssigned"
        },
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "AzureWebJobsDashboard",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "8.11.1"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "[variables('functionWorkerRuntime')]"
              },
              {
                "name": "ServiceBusConnectionString",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=', variables('serviceBusConnectionSecret'), ')')]"
              },
              {
                "name": "TenantId",
                "value": "variables('TenantId')"
              },
              {
                "name": "UserAssignedClientId",
                "value": "variables('UserAssignedClientId')"
              },
              {
                "name": "ServiceBusNamespace",
                "value": "variables('ServiceBusNamespace')"
              },
              {
                "name": "ServiceBusConnectionString",
                "value": "variables('ServiceBusConnectionString')"
              },
              {
                "name": "MercadoBitcoinApiUser",
                "value": "variables('MercadoBitcoinApiUser')"
              },
              {
                "name": "MercadoBitcoinApiPassword",
                "value": "variables('MercadoBitcoinApiPassword')"
              }
            ]
          }
        }
      }
    ]
  }